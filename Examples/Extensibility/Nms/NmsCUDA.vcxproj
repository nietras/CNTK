<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" InitialTargets="CheckDependencies" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_NoOpt|x64">
      <Configuration>Release_NoOpt</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="Nms_GPU.cu">
	  <FileType>CppCode</FileType>
	</CudaCompile>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{33458C5F-C463-47AF-AFF3-2275F7ABDDD6}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Nms</RootNamespace>
    <ProjectName>NmsCUDA</ProjectName>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <PropertyGroup>
    <ConfigurationType>StaticLibrary</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(SolutionDir)\CNTK.Cpp.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Choose>
    <When Condition="Exists('$(CUDNN_PATH)')">
      <PropertyGroup>
        <UseCuDnn>true</UseCuDnn>
        <CuDnnDefine>USE_CUDNN</CuDnnDefine>
        <CuDnnIncPath>$(CUDNN_PATH)\include</CuDnnIncPath>
        <CuDnnLibPath>$(CUDNN_PATH)\lib\x64</CuDnnLibPath>
        <CuDnnLib>cudnn.lib</CuDnnLib>
        <CuDnnDll>$(CUDNN_PATH)\bin\cudnn*.dll</CuDnnDll>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <UseCuDnn>false</UseCuDnn>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <PropertyGroup>
    <CudaToolkitCustomDir>$(CudaPath)</CudaToolkitCustomDir>
    <IntDir>$(IntDir)\NmsCUDA\</IntDir>
  </PropertyGroup>
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(CudaMsbuildPath)\CUDA $(CudaVersion).props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <TargetName>Cntk.Nms.Cuda-$(CntkComponentVersion)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PreprocessorDefinitions>NO_SYNC; WIN32; _WINDOWS; _USRDLL; MATH_EXPORTS; $(CuDnnDefine); %(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)Source\Common\include;$(CUB_PATH);$(CudaInclude);$(CuDnnIncPath)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <FloatingPointModel>Fast</FloatingPointModel>
      <DisableSpecificWarnings>4819</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(CudaLibs);%(AdditionalDependencies)</AdditionalDependencies>
      <DelayLoadDLLs>$(CudaDlls);%(DelayLoadDLLs)</DelayLoadDLLs>
    </Link>
    <Lib>
      <AdditionalLibraryDirectories>$(OutDir);$(CudaLibPath);$(CuDnnLibPath)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(CuDnnLib)</AdditionalDependencies>
    </Lib>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <GenerateLineInfo>true</GenerateLineInfo>
      <AdditionalCompilerOptions>/WX</AdditionalCompilerOptions>
      <CodeGeneration>$(NvidiaCompute)</CodeGeneration>
      <FastMath>true</FastMath>
      <GPUDebugInfo>false</GPUDebugInfo>
      <GPUDebugInfo Condition="'$(CNTK_CUDA_DEVICE_DEBUGINFO)'=='1'">true</GPUDebugInfo>
      <AdditionalOptions>-Xcudafe "--diag_suppress=field_without_dll_interface" -Xcompiler "/wd 4819" %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
    <PostBuildEvent>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="$(DebugBuild)">
    <ClCompile>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="$(ReleaseBuild)">
    <ClCompile>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <AdditionalOptions>/d2Zi+ %(AdditionalOptions)</AdditionalOptions>
      <TreatWarningAsError Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</TreatWarningAsError>
    </ClCompile>
    <CudaCompile>
      <HostDebugInfo>false</HostDebugInfo>
    </CudaCompile>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(CudaMsbuildPath)\CUDA $(CudaVersion).targets" />
  </ImportGroup>
  <Target Name="CheckDependencies">
    <Error Condition="!Exists('$(CUB_PATH)')" Text="CNTK requires the NVIDIA CUB library to build. Please see https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-CNTK-on-Windows#nvidia-cuda-8 for installation instructions." />
    <Error Condition="!Exists('$(CUDNN_PATH)')" Text="CNTK requires the NVIDIA cuDNN library 5.0 or higher to build. Please see https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-CNTK-on-Windows#nvidia-cuda-8 for installation instructions." />
  </Target>
</Project>